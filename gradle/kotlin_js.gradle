/*
 * Check usage information at: http://hexagonkt.com/gradle/#kotlin-js
 */

apply(plugin: "idea")
apply(plugin: "eclipse")
apply(plugin: "kotlin2js")

defaultTasks("build")

idea {
    module {
        setDownloadSources(true)
        setDownloadJavadoc(true)
    }
}

eclipse {
    classpath {
        setDownloadSources(true)
        setDownloadJavadoc(true)
    }
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

dependencies {
    final String finalKotlinVersion = findProperty("kotlinVersion") ?: "1.3.72"

    implementation("org.jetbrains.kotlin:kotlin-stdlib-js:$finalKotlinVersion")

    testImplementation("org.jetbrains.kotlin:kotlin-test-js:$finalKotlinVersion")
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.sourceMap = true
}

clean {
    delete("build", "out")
}

task("jsAll", type: Sync, dependsOn: "classes") {
    configurations.runtimeClasspath.each { File file ->
        from(zipTree(file.absolutePath)) {
            includeEmptyDirs = false
            include { FileTreeElement element ->
                String path = element.path
                boolean isInResources = path.startsWith("META-INF/resources/")
                boolean isJs = path.endsWith(".js")
                isJs && (isInResources || !path.startsWith("META-INF/"))
            }
        }
    }

    from(compileKotlin2Js.destinationDir) {
        includeEmptyDirs = false
        include("**/*.js")
    }

    into("$buildDir/js")
}

task("assembleWeb", type: Sync, dependsOn: "jsAll") {

    // TODO Set 'inputs' to know when to execute

    doFirst {
        copy {
            from("$buildDir/resources/main")
            into("$buildDir/web")
        }
    }

    final String javaScriptDirectory = findProperty("javaScriptDirectory") ?: "js"

    from("$buildDir/js")
    into("$buildDir/web/$javaScriptDirectory")
}

assemble.dependsOn("assembleWeb")
